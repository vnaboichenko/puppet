user nginx;
worker_processes 12;
pid /var/run/nginx.pid;

events {
    worker_connections 9000;
}

http {
client_max_body_size 200m;

#include tomcat_backend
include /etc/nginx/scale/rest_list;

#include healthcheck_backend
include /etc/nginx/scale/healthcheck_list;

#include admin_backend
include /etc/nginx/scale/admin_list;



    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ##
    # Logging Settings
    ##
#$upstream_addr
#хранит IP-адрес и порт сервера или путь к UNIX-сокету. Если при обработке запроса были сделаны обращения к нескольким серверам, то их адреса разделяются запятой, например, “192.168.1.1:80, 192.168.1.2:80, unix:/tmp/sock”. Если произошло внутреннее перенаправление от одной группы серверов на другую с помощью “X-Accel-Redirect” или error_page, то эти группы серверов разделяются двоеточием, например, “192.168.1.1:80, 192.168.1.2:80, unix:/tmp/sock : 192.168.10.1:80, 192.168.10.2:80”.
#$upstream_response_time
#хранит времена ответов серверов в секундах с точностью до миллисекунд. Несколько ответов также разделяются запятыми и двоеточиями.
#$upstream_status
#хранит коды ответов серверов. Несколько ответов также разделяются запятыми и двоеточиями.
#$upstream_http_...
log_format  log_proxy	'"$http_x_forwarded_proto" - $remote_addr - $remote_user [$time_local] '
        	    '"$scheme" "$request" $status $bytes_sent '
        	    '"$http_referer" "$http_user_agent" "$http_x_forwarded_for" "$gzip_ratio"'
	    '" Upstream=$upstream_addr "'
	    '" ResponseTime=$upstream_response_time "'
	    '" Status=$upstream_status "';
    access_log /var/log/nginx/access.log log_proxy;
    error_log /var/log/nginx/error.log;

    gzip on;
    gzip_disable "msie6";

    # Virtual Host Configs


#include /etc/nginx/ssl/ssl.conf;

server {
    listen 80;
    real_ip_header X-Forwarded-For;
#    real_ip_header X-Real-IP;
    set_real_ip_from 0.0.0.0/0;

    location = /nginx_status {
    stub_status on;
    access_log   off;
    allow 194.213.110.0/23;
    allow 91.207.132.0/23;
    allow 91.218.144.0/23;
    allow 127.0.0.1;
    deny all;
    }

    location = /check_status {
        check_status;
        allow 194.213.110.0/23;
	allow 91.207.132.0/23;
	allow 91.218.144.0/23;
	deny all;

    }

if ( $http_x_forwarded_proto = http ) {

rewrite  ^  https://$host$request_uri? permanent;
#	rewrite        ^ https://google.com$uri permanent;
}


    location /api/ {
    proxy_pass http://tomcat_backend;
#    proxy_connect_timeout 10;
#    proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
    }

#    location /api/v1/details/healthcheck {
#    proxy_pass http://healthcheck_backend;
#    }




     location /admin/ {
    proxy_pass http://admin_backend;
    proxy_connect_timeout 10;
    proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
     }


    location /admin-api/ {
        proxy_pass http://admin_backend;
        proxy_connect_timeout 10;
        proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
        allow 194.213.110.0/23;
	allow 91.207.132.0/23;
	allow 91.218.144.0/23;
	deny all;

     }
    location /sms-service/  {
        proxy_pass http://admin_backend;
    proxy_connect_timeout 10;
    proxy_next_upstream error timeout http_500 http_502 http_503 http_504;

     }

    location /api-statistics/  {
        proxy_pass http://admin_backend;
        proxy_connect_timeout 10;
        proxy_next_upstream error timeout http_500 http_502 http_503 http_504;

     }

    location /statistics-api/  {
        proxy_pass http://admin_backend;
        allow 194.213.110.0/23;
        allow 91.207.132.0/23;
        allow 91.218.144.0/23;
	deny all;
 }


    location /wordpress {
        proxy_pass http://wordpress;
     }


    location /nagios {
        proxy_pass http://puppet;
     }

    location /pnp4nagios {
        proxy_pass http://puppet;
     }



     location / {
               if ($request_uri ~ /.*/.*) {
                   return 403;
               }
               proxy_pass http://tomcat_backend/api/optin?inv=;
                }
                                   

     
#     location / {
#     return 403;
#     break;
#     }



}

#server {
#       listen         80;
#       server_name    mirantis-dev.zooka.co;
#       rewrite        ^ https://$server_name$request_uri? permanent;
#}









}

